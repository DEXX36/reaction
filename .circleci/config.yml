version: 2.1
orbs:
  codecov: codecov/codecov@3.0.0
# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
    DOCKER_REPOSITORY: "reactioncommerce/reaction"
    DOCKER_NAMESPACE: "reactioncommerce"
    DOCKER_NAME: "reaction"
  docker:
    - image: circleci/node:14.11.0-stretch

jobs:
  install-dependencies:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
    - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Install NPM dependencies
          command: npm ci
      - save_cache:
          key: reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: reaction-v6-node-modules-{{ .Branch }}
          paths:
            - node_modules
      - codecov/upload
  codecov:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
    - image: circleci/node:14.11.0-stretch
    steps:
      - codecov/upload
  dockerfile-lint:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Lint Dockerfiles
          command: ${CI_SCRIPTS} lint-dockerfiles

  eslint:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Lint JavaScript
          command: npm run lint

  graphql-lint:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Lint GraphQL schemas
          command: npm run lint:gql

  test-integration-query:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
      # Integration tests need MongoDB server running and accessible on port 27017
      - image: circleci/mongo:4.2.0
        command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Run Integration Query Tests
          environment:
            MONGO_URL: mongodb://localhost:27017/test
            MONGO_USE_UNIFIED_TOPOLOGY: false
          command: npm run test:integration:query

  test-integration-mutation:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
      # Integration tests need MongoDB server running and accessible on port 27017
      - image: circleci/mongo:4.2.0
        command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Run Integration Mutation Tests
          environment:
            MONGO_URL: mongodb://localhost:27017/test
            MONGO_USE_UNIFIED_TOPOLOGY: false
          command: npm run test:integration:mutation

  release:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - reaction-v6-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - reaction-v6-node-modules-{{ .Branch }}
      - run:
          name: Push the latest version to npm
          command: |
            npx semantic-release

  docker-build-push:
    environment:
      CI_SCRIPTS: "npx --quiet --package @reactioncommerce/ci-scripts@1.6.2"
      DOCKER_REPOSITORY: "reactioncommerce/reaction"
      DOCKER_NAMESPACE: "reactioncommerce"
      DOCKER_NAME: "reaction"
    docker:
      - image: circleci/node:14.11.0-stretch
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push production Docker image
          command: |
            VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | cut -c2-100)
            docker build -t ${DOCKER_REPOSITORY}:${VERSION} .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push ${DOCKER_REPOSITORY}:${VERSION}
workflows:
  build_and_test:
    jobs:
      - install-dependencies
      - codecov 
      - dockerfile-lint:
          requires:
            - install-dependencies
      - eslint:
          requires:
            - install-dependencies
      - graphql-lint:
          requires:
            - install-dependencies
      - test-integration-query:
          requires:
            - install-dependencies
      - test-integration-mutation:
          requires:
            - install-dependencies
      - release:
          context: reaction-publish-semantic-release
          filters:
            branches:
              only:
                - trunk
          requires:
            - dockerfile-lint
            - eslint
            - graphql-lint
            - test-integration-query
            - test-integration-mutation
      - docker-build-push:
          context: reaction-publish-docker
          filters:
            branches:
              only:
                - trunk
          requires:
            - release